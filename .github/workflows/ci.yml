name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - darktable-**
    paths-ignore:
        - "po/**"
        - "packaging/**"
        - "data/latex/**"
        - "data/lua/**"
        - "data/pixmaps/**"
        - "data/pswp/**"
        - "data/style/**"
        - "data/themes/**"
        - "data/watermarks/**"
        - "tools/*"
        - "**.md"
  pull_request:
    branches:
      - master
    paths-ignore:
        - "po/**"
        - "packaging/**"
        - "data/latex/**"
        - "data/lua/**"
        - "data/pixmaps/**"
        - "data/pswp/**"
        - "data/style/**"
        - "data/themes/**"
        - "data/watermarks/**"
        - "tools/*"
        - "**.md"
  workflow_dispatch:

permissions:
  contents: read

jobs:

  Linux:
    if: github.repository == 'darktable-org/darktable' || github.event_name == 'workflow_dispatch'
    name: Linux.${{ matrix.distro }}.${{ matrix.compiler.compiler }}.${{ matrix.btype }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.distro }}
      options: --tmpfs /tmp:exec --tmpfs /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}:exec
    strategy:
      fail-fast: true
      matrix:
        distro:
          - "ubuntu:24.10"
        compiler:
          - { compiler: GNU12,  CC: gcc-12,   CXX: g++-12,     packages: gcc-12 g++-12 }
          # - { compiler: LLVM16, CC: clang-16, CXX: clang++-16, packages: clang-16 libomp-16-dev llvm-16-dev libc++-16-dev libc++abi1-16 lld-16 clang-tools-16 mlir-16-tools libmlir-16-dev}
        btype:
          - Release
        target:
          - skiptest
        generator:
          - Ninja
        eco: [-DDONT_USE_INTERNAL_LIBRAW=ON]
        include:
          # We want one run in CI to be Debug to make sure the Debug build isn't broken
          - distro: "ubuntu:24.10"
            btype: Debug
            compiler: { compiler: GNU12, CC: gcc-12, CXX: g++-12, packages: gcc-12 g++-12 }
            target: skiptest
            generator: Ninja
            eco: -DDONT_USE_INTERNAL_LIBRAW=OFF
    env:
      DISTRO: ${{ matrix.distro }}
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/build
      INSTALL_PREFIX: ${{ github.workspace }}/install
      ECO: ${{ matrix.eco }}
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      GENERATOR: ${{ matrix.generator }}
      TARGET: ${{ matrix.target }}
      DARKTABLE_CLI: ${{ github.workspace }}/install/bin/darktable-cli
    steps:
      - name: Configure APT
        if: ${{ false }}
        timeout-minutes: 1
        run: |
          set -xe
          tee /etc/dpkg/dpkg.cfg.d/force-unsafe-io > /dev/null <<EOT
          force-unsafe-io
          EOT
          tee /etc/apt/apt.conf.d/tmpfs > /dev/null <<EOT
          Dir::Cache::Archives "/tmp/apt/archives";
          APT::ExtractTemplates::TempDir "/tmp/apt/temp";
          EOT
          mkdir -p /tmp/apt/archives
          tee /etc/apt/apt.conf.d/80retry > /dev/null <<EOT
          Acquire::Retries "10";
          EOT
          tee /etc/apt/apt.conf.d/80recommends > /dev/null <<EOT
          APT::Install-Recommends "false";
          EOT
          tee /etc/apt/apt.conf.d/80suggests > /dev/null <<EOT
          APT::Install-Suggests "false";
          EOT
          tee /etc/apt/apt.conf.d/80forceyes > /dev/null <<EOT
          APT::Get::Assume-Yes "true";
          EOT
          tee /etc/apt/apt.conf.d/80fixmissing > /dev/null <<EOT
          APT::Get::Fix-Missing "true";
          EOT
          rm -rf /etc/apt/sources.list*
          if [ "${DISTRO}" = "debian:unstable-slim" ]; then
          tee /etc/apt/sources.list > /dev/null <<EOT
          deb http://debian-archive.trafficmanager.net/debian unstable main
          EOT
          elif [ "${DISTRO}" = "debian:trixie-slim" ]; then
          tee /etc/apt/sources.list > /dev/null <<EOT
          deb http://debian-archive.trafficmanager.net/debian trixie main
          deb http://debian-archive.trafficmanager.net/debian trixie-updates main
          deb http://debian-archive.trafficmanager.net/debian-security trixie-security main
          deb http://debian-archive.trafficmanager.net/debian trixie-backports main
          EOT
          elif [ "${DISTRO}" = "debian:bookworm-slim" ]; then
          tee /etc/apt/sources.list > /dev/null <<EOT
          deb http://debian-archive.trafficmanager.net/debian bookworm main
          deb http://debian-archive.trafficmanager.net/debian bookworm-updates main
          deb http://debian-archive.trafficmanager.net/debian-security bookworm-security main
          deb http://debian-archive.trafficmanager.net/debian bookworm-backports main
          EOT
          fi
      - name: Update base packages
        timeout-minutes: 1
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set -xe
          rm -rf /var/lib/apt/lists/*
          apt-get -y update
          # apt-get install eatmydata
          apt-get -y upgrade
      - name: Install compiler ${{ matrix.compiler.compiler }}
        run: |
          apt-get -y install ${{ matrix.compiler.packages }}
      - name: Install Base Dependencies
        run: |
          apt-get -y install \
            build-essential \
            cmake \
            appstream-util \
            desktop-file-utils \
            gettext \
            git \
            gdb \
            intltool \
            libatk1.0-dev \
            libavif-dev \
            libcairo2-dev \
            libcolord-dev \
            libcolord-gtk-dev \
            libcups2-dev \
            libcurl4-gnutls-dev \
            libexiv2-dev \
            libgdk-pixbuf2.0-dev \
            libglib2.0-dev \
            libgmic-dev \
            libgphoto2-dev \
            libgraphicsmagick1-dev \
            libgtk-3-dev \
            libheif-dev \
            libjpeg-dev \
            libjson-glib-dev \
            liblcms2-dev \
            liblensfun-dev \
            liblua5.4-dev \
            libopenexr-dev \
            libopenjp2-7-dev \
            libosmgpsmap-1.0-dev \
            libpango1.0-dev \
            libpng-dev \
            libportmidi-dev \
            libpugixml-dev \
            libraw-dev \
            librsvg2-dev \
            libsaxon-java \
            libsdl2-dev \
            libsecret-1-dev \
            libsqlite3-dev \
            libtiff5-dev \
            libwebp-dev \
            libx11-dev \
            libxml2-dev \
            libxml2-utils \
            ninja-build \
            perl \
            po4a \
            python3-jsonschema \
            xsltproc \
            zlib1g-dev;
      - uses: actions/checkout@v4
        with:
          submodules: false
          path: src
          fetch-depth: 1
      - name: Get only those submodules that are needed for build
        run: |
          cd src
          git submodule init
          git config submodule.src/tests/integration.update none
          git submodule update
          cd -
      - name: Build and Install
        run: |
          cmake -E make_directory "${BUILD_DIR}";
          cmake -E make_directory "${INSTALL_PREFIX}";
          ./src/.ci/ci-script.sh;
      - name: Check if it runs
        run: |
          ${INSTALL_PREFIX}/bin/darktable --version || true
          ${INSTALL_PREFIX}/bin/darktable-cli \
                 --width 1000 --height 1000 \
                 --hq true --apply-custom-presets false \
                 "${SRC_DIR}/data/pixmaps/256x256/darktable.png" \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0
      - name: Run Integration test suite
        #integration test can get "stuck" plus there are couple of errors here, so it needs to be addressed first
        if: ${{ false }}
        run: |
          cd "${SRC_DIR}/src/tests/integration/"
          ./run.sh --no-opencl --no-deltae --fast-fail
